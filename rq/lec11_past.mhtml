From: <Saved by Blink>
Snapshot-Content-Location: http://css.csail.mit.edu/6.858/2018/questions.html?q=q-android&lec=11
Subject: 6.858 / Spring 2018 / Paper Reading Questions
Date: Thu, 21 Mar 2018 07:18:54 -0000
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----MultipartBoundary--L1NLsm4nOaw37JHcRC3dKBSOeGyHGOuXDc8b2zCQUv----"

------MultipartBoundary--L1NLsm4nOaw37JHcRC3dKBSOeGyHGOuXDc8b2zCQUv----
Content-Type: text/html
Content-ID: <frame-35216-b3e053f3-ab45-4cd1-aeac-bbaa081b8d1a@mhtml.blink>
Content-Transfer-Encoding: quoted-printable
Content-Location: http://css.csail.mit.edu/6.858/2018/questions.html?q=q-android&lec=11

<html><head><meta http-equiv=3D"Content-Type" content=3D"text/html; charset=
=3DUTF-8">
<title>
6.858 / Spring 2018

/ Paper Reading Questions

</title>
<meta http-equiv=3D"pragma" content=3D"no-cache">
<link rel=3D"stylesheet" type=3D"text/css" href=3D"http://css.csail.mit.edu=
/6.858/2018/style.css">



</head>

<body bgcolor=3D"#ffffff" text=3D"#000000">

<table cols=3D"3" width=3D"100%" height=3D"100%" border=3D"0" cellspacing=
=3D"0" cellpadding=3D"0">
<tbody>
<!-- Header row -->
<tr height=3D"40px">
 <td colspan=3D"3">
 <table width=3D"100%" height=3D"40px" border=3D"0" cellspacing=3D"0" cellp=
adding=3D"0">
 <tbody>
   <tr>
    <td bgcolor=3D"#000000">
      <div align=3D"left" style=3D"padding-left:58px; padding-top: 2px;">
      <font style=3D"font-size: 28px; color: #ffffff">
	<a name=3D"top">
         <b>6.858</b>: Computer Systems Security
	</a>
      </font>
      </div>
    </td>

    <td bgcolor=3D"#8a0a0a" halign=3D"center" valign=3D"center" width=3D"25=
0px">
     <div align=3D"center" style=3D"padding-top: 2px; padding-bottom: 4px;"=
>
     <font style=3D"font-size: 28px; color: #ffffff">
      Spring <b>2018</b>
     </font>
     </div>
    </td>
  </tr>
 </tbody>
 </table>
 </td>
</tr>

<!-- horiz line -->
<tr>
<td colspan=3D"3" height=3D"5px" bgcolor=3D"#8a0a0a">
</td>
</tr>

<tr>
<!-- Menu -->
<td bgcolor=3D"#8a0a0a" valign=3D"top" width=3D"180px">
 <table cols=3D"2" rows=3D"1" border=3D"0" cellspacing=3D"0" cellpadding=3D=
"0" width=3D"100%" height=3D"100%">
  <tbody>
   <tr>
   <td valign=3D"top">
   <table cols=3D"1" rows=3D"1" border=3D"0" cellspacing=3D"0" cellpadding=
=3D"0" width=3D"100%">
    <tbody>
      <tr><td><div class=3D"menuHead">
         <a href=3D"http://css.csail.mit.edu/6.858/2018/" class=3D"menuItem=
">Home</a>
      </div></td></tr>
      <tr><td><div class=3D"menuHead">
         <a href=3D"http://css.csail.mit.edu/6.858/2018/general.html" class=
=3D"menuItem">General information</a><br>
      </div></td></tr>
      <tr><td><div class=3D"menuHead">
         <a href=3D"http://css.csail.mit.edu/6.858/2018/schedule.html" clas=
s=3D"menuItem">Schedule</a><br>
      </div></td></tr>
      <tr><td><div class=3D"menuHead">
         <a href=3D"http://css.csail.mit.edu/6.858/2018/reference.html" cla=
ss=3D"menuItem">Reference materials</a><br>
      </div></td></tr>
      <tr><td><div class=3D"menuHead">
         <a href=3D"https://piazza.com/mit/spring2018/6858" class=3D"menuIt=
em">Piazza discussion</a><br>
      </div></td></tr>
      <tr><td><div class=3D"menuHead">
         <a href=3D"http://css.csail.mit.edu/6.858/2018/labs/handin.html" c=
lass=3D"menuItem">Submission</a><br>
      </div></td></tr>
      <tr><td><div class=3D"menuHead">
         <a href=3D"http://css.csail.mit.edu/6.858/2018/quiz.html" class=3D=
"menuItem">Quizzes</a><br>
      </div></td></tr>
      <tr><td><div class=3D"menuHead">
         <a class=3D"menuItem">Labs</a><br>
         <a href=3D"http://css.csail.mit.edu/6.858/2018/labs/lab1.html" cla=
ss=3D"menuItem">1</a>
         <a href=3D"http://css.csail.mit.edu/6.858/2018/labs/lab2.html" cla=
ss=3D"menuItem">2</a>
         <a href=3D"http://css.csail.mit.edu/6.858/2018/labs/lab3.html" cla=
ss=3D"menuItem">3</a>
         <a href=3D"http://css.csail.mit.edu/6.858/2018/labs/lab4.html" cla=
ss=3D"menuItem">4</a>
         <a href=3D"http://css.csail.mit.edu/6.858/2018/labs/lab5.html" cla=
ss=3D"menuItem">5</a>
      </div></td></tr>
      <tr><td><div class=3D"menuHead">
         <a href=3D"http://ist.mit.edu/network/rules" class=3D"menuItem">MI=
T network rules</a>
      </div></td></tr>
      <tr><td><div class=3D"menuHead">
         <a href=3D"http://css.csail.mit.edu/6.858/2018/projects.html" clas=
s=3D"menuItem">Final projects</a><br>
      </div></td></tr>
      <tr><td><div class=3D"menuHead">
         <a href=3D"http://css.csail.mit.edu/6.858/2017/" class=3D"menuItem=
">2017 class materials</a><br>
      </div></td></tr>
      <tr><td><div class=3D"menuHead">
         <a rel=3D"license" href=3D"http://creativecommons.org/licenses/by/=
3.0/us/"><img alt=3D"Creative Commons License" style=3D"border-width:0" src=
=3D"http://css.csail.mit.edu/6.858/2018/cc-by.png"></a>
      </div></td></tr>
    </tbody>
   </table>
   </td>

   <td width=3D"3px" bgcolor=3D"#8a0a0a">
   </td>
   </tr>
  </tbody>
 </table>
</td>
<!-- End Menu -->

<td colspan=3D"2">

<table border=3D"0" cellspacing=3D"0" cellpadding=3D"0" width=3D"100%" heig=
ht=3D"100%">
<tbody><tr><td style=3D"padding-left:10px; padding-right:10px; padding-top:=
 10px; padding-bottom: 10px" valign=3D"top" align=3D"left">


<!-- Begin Page Content -->


<!--
    To add a new question, just put in within a <div> tag, give it
    some identifier (i.e., 'id=3D"qXX"'), and then add it to the questions
    array variable below.  To link directly to the question, just use a
    link to 'questions.html?q=3DqXX'.
 -->

<h1>
Paper Reading Questions
</h1>

<a name=3D"top"></a>
<p>
For each paper, your assignment is two-fold.  Before lecture:

</p><ul>
<li>Submit your answer for each lecture's paper question via the
    <a href=3D"http://css.csail.mit.edu/6.858/2018/labs/handin.html">submis=
sion web site</a> in a file named
    <code>lec<var>n</var>.txt</code>, and
</li><li>Submit your own question about the paper (e.g., what you find most=
 confusing about
    the paper or the paper's general context/problem) in a file named
    <code>sq<var>n</var>.txt</code>.
    You cannot
    use the question below.  To the extent possible, during lecture we will=
 try to
    answer these questions.  Below, we have included the questions we've re=
ceived
    from students in past years (when available), along with answers to tho=
se
    questions, in case you find it helpful.
</li></ul>

<p id=3D"submit-links" style=3D"visibility: visible; position: static;">
    Once you submit your own question and answer (or after the deadline
    has passed), you can view the
    <a href=3D"https://6858.csail.mit.edu/lec-questions/11" id=3D"question-=
view-link">questions</a>
    and
    <a href=3D"https://6858.csail.mit.edu/lec-answers/11" id=3D"answer-view=
-link">answers</a>
    that other students submitted.
</p>

<p></p>

<div id=3D"questions">

 =20

 =20

 =20

 =20

 =20

 =20

 =20

 =20

 =20

 =20

 =20

 =20

 =20

 =20

 =20

 =20

 =20

 =20

 =20

 =20

 =20

 =20

 =20

 =20

 =20

 =20

 =20

 =20

  <div id=3D"q-android" class=3D"questionbox"><p><b>Lecture 11</b></p>
    <p>
      The paper mentions that typical Android applications execute on top o=
f
      a Java virtual machine.  What is the role of Java in ensuring overall
      security?
    </p>
  </div>

 =20


 =20

 =20

 =20

 =20

 =20

 =20

 =20

 =20

 =20

 =20

 =20

 =20

 =20

 =20

 =20

 =20

 =20

 =20

 =20

 =20

 =20

 =20

 =20

 =20

 =20

 =20

 =20

 =20

 =20

 =20

 =20

 =20

</div>

<style>
  div.responsebox {
    margin: 1pc 4% 0pc 4%;
    padding: 0.5pc 0.5pc 0.5pc 0.5pc;
    background-color: #e0e0ff;
    border: 1px dashed red;
  }

  pre.responsepre {
    white-space: pre-wrap;
  }
</style>

<div id=3D"responses">

  <div class=3D"lecture-responses">
    <h2>Questions and answers for lecture 11 from past years</h2>

      <div class=3D"responsebox"><pre class=3D"responsepre">On Mon, Mar 13,=
 2017 at 10:46 PM, Anonymous wrote:
&gt; Is there an alternative to pending intents that would more closely con=
form to Android=E2=80=99s MAC model?

The main goal of MAC for Android's purposes is to help developers
figure out what their security story is by looking at their app
manifest.  Perhaps one alternative would be to include the set of
allowed pending intents in the spec, so that it was clear at least
which parts could be delegated at runtime.  Or maybe a more explicit
spec for what delegation could happen.  But it's not clear the MAC
model is really worth sticking to so ideologically; delegation in code
is also a fine plan.

&gt; Does iOS have a similar security design? Is iOS=E2=80=99s design consi=
dered more secure?

iOS has a fairly similar design, though it doesn't allow quite as much
sharing between apps:

  http://css.csail.mit.edu/6.858/2012/readings/ios-security-may12.pdf

NIckolai.

</pre></div>
      <div class=3D"responsebox"><pre class=3D"responsepre">The strings are=
 publicly known.  The reference monitor does not grant
the permission to anyone that knows the string; rather, the user is
asked at install time whether they wish to grant those permissions to
the app they're installing.

Nickolai.

On Sun, Mar 19, 2017 at 6:06 PM, Anonymous wrote:
&gt; Paper: Understanding Android Security
&gt;
&gt; My Question: I'm confused about the security of the string
&gt; permissions. Can't anyone try to guess the permissions until they get
&gt; it right? Since they are just strings that they could construct on
&gt; their own without knowledge of the actual permissions.

</pre></div>
      <div class=3D"responsebox"><pre class=3D"responsepre">Something like =
Ryoan's stronger guarantee that ensures that even a
malicious application cannot leak out confidential data.

Nickolai.

On Sun, Mar 19, 2017 at 6:08 PM, Anonymous wrote:
&gt; It's stated that Android's permission label model only restricts acces=
s to components and doesn't currently provide "information flow" guarantees=
. What sort of information flow guarantees would designers seek to provide?

</pre></div>
      <div class=3D"responsebox"><pre class=3D"responsepre">I think it is a=
 huge security issue in practice.  I would suggest that
you buy Google phones (Nexus, Pixel) which get pretty much monthly
security updates at this point, or complain to your phone's software
vendor for not keeping up..

Nickolai.

On Sun, Mar 19, 2017 at 6:03 PM, Anonymous wrote:
&gt; Why isn't it more of a security concern that my Android phone doesn't =
get security updates
&gt; as often as Google releases them? My phone last had a security update =
on Jan 1, but one of
&gt; my friends with a Google phone got an update on March 5. Shouldn't eve=
ryone be getting these
&gt; security updates?

</pre></div>
      <div class=3D"responsebox"><pre class=3D"responsepre">The plan was to=
 rely on users to approve which apps should receive
those permissions, thus authenticating the apps.  Now, in hindsight,
it seems like not the best choice especially for non-expert users, who
might not be able to make the right call about which apps to allow or
not.

Nickolai.

On Sun, Mar 19, 2017 at 5:50 PM, Anonymous wrote:
&gt; Why did the Android developers choose to not have their ICC framework =
provide any authentication guarantees? It seems as though it would be diffi=
cult to reason about the security properties of any component that is avail=
able for third party use without such guarantees, as a malicious applicatio=
n could theoretically obtain any permission not marked "Signature" or "Sign=
ature/System" (and those markings rule out any third-party use).

</pre></div>
      <div class=3D"responsebox"><pre class=3D"responsepre">The designs are=
 pretty similar.  Android has more flexibility in terms
of allowing applications to interact, to override system apps, etc,
which at some level comes with the possibility of the user messing up
their phone's configuration and getting into some undesirable state,
from a security perspective.  So, you can think of Android as giving
the user more rope to screw up, whereas iOS tends to limit how apps
can interact, what can be overriden, etc, which is less configurable
but also fewer ways to screw up.

Nickolai.

On Sun, Mar 19, 2017 at 6:02 PM, Anonymous wrote:
&gt; From this paper, it seems like Android is as secure as if not more sec=
ure than iOS, and yet popular opinion holds that iOS is generally more secu=
re. What is expert opinion on which is more secure?

</pre></div>
      <div class=3D"responsebox"><pre class=3D"responsepre">Android now pro=
mpts for permissions at use time.  So, even if you
installed an app that has the camera permission, Android will prompt
the user the first time the app actually tries to use that permission.

Nickolai.

On Thu, Mar 16, 2017 at 11:07 AM, Anonymous wrote:
&gt; What's the largest improvement/change that has been made in terms of A=
ndroid
&gt; security since this paper was published in 2009?

</pre></div>
      <div class=3D"responsebox"><pre class=3D"responsepre">There's been a =
few papers on Android security bugs in practice.  One
class of bugs are issues in the Android system itself, typically bugs
in the Linux kernel.  That's not really related to app developers
making mistakes.  Another class of bugs are apps that don't set or
check permissions correctly.  Probably the biggest source of that has
been inadequate default settings in Android apps -- components used to
default to being open unless the developer explicitly lists them as
protected, developers have to remember to label their broadcast
receivers to limit who can send them broadcast intents, etc.

Nickolai.

On Sun, Mar 19, 2017 at 5:41 PM, Anonymous wrote:
&gt; Zane Markel
&gt; Reading Question for Lecture 11
&gt;
&gt; This paper mentions that the "subtlety of refinements" to the basic MA=
C access controls available to Android make "gathering a firm grasp on Andr=
oid's security model nontrivial." As evidenced by the plethora of attacks o=
n Android that have come out over the years, developers clearly have a hard=
 time grasping the security models of the apps they make.
&gt;
&gt; Have there been any surveys to determine if there are any common misco=
nceptions or mistakes developers make when designing their apps' security p=
olicies? Put another way, are there any particular aspects of the Android s=
ecurity model that stand out as thorns to developing secure apps?

</pre></div>
      <div class=3D"responsebox"><pre class=3D"responsepre">It was far bett=
er than Windows or MacOSX at the time (where each app
just gets all access to all user data, and there's no alternative).
Now, Android 6 started asking for confirmation of permissions at use
time (in addition to install time), so the user may be able to
meaningfully say "No" if they don't want an app to exercise some
permission.

Nickolai.

On Sun, Mar 19, 2017 at 9:11 PM, Anonymous wrote:
&gt; Having the user verify permissions at install time doesn't seem like a=
 great security policy - most people just click accept without reading. Why=
 was this a reasonable choice for Android?

</pre></div>
      <div class=3D"responsebox"><pre class=3D"responsepre">There's a lot o=
f malware for Android too.  For a long time, popular
Android malware would send SMS messages to pay-per-message numbers
like 1-900.  Then Google changed their SMS permissions to give more
prominent warnings, and stepped up enforcement in their Android Play
market, causing that to be less prevalent.  I think now a lot of
Android malware does things like click-fraud to bump up advertising
revenue.

Nickolai.

On Sun, Mar 19, 2017 at 8:04 PM, Anonymous wrote:
&gt; Lecture 11
&gt;
&gt; Have there been any successful Android attacks affecting a large numbe=
r of users? You hear about hackers getting millions of username/passwords f=
rom websites being hacked, but it seems like mobile attacks must be more ta=
rgeted.

</pre></div>
      <div class=3D"responsebox"><pre class=3D"responsepre">Surprisingly fe=
w changes; the major one was Android 6 introducing
permissions confirmations when the app actually tries to use it.
Otherwise, users used to always just say "yes" when installing the
app.

Nickolai.

On Fri, Mar 17, 2017 at 2:41 PM, Anonymous wrote:
&gt; This paper is a security review of Android 1.0. Have there been any ma=
jor changes to the security architecture form v1.0 to the currrent version =
(7.0)? Where any of these changes in response to a successful attack on the=
 system?

</pre></div>
      <div class=3D"responsebox"><pre class=3D"responsepre">Yeah, iOS at a =
high level is pretty similar, though a bit more
restrictive in terms of what apps can do, and consequently it has
fewer ways for users to mess up, which means fewer security mistakes.
Here's some description of their security plan, though it's not as
clearly laid out as Android's:

  http://css.csail.mit.edu/6.858/2012/readings/ios-security-may12.pdf

Nickolai.

On Wed, Mar 15, 2017 at 11:34 PM, Anonymous wrote:
&gt; 6.858 Lecture 11 - Mobile Phone Security
&gt; 3/20/17
&gt;
&gt; How similar is the iOS security model to that of Android? (I think peo=
ple
&gt; generally regard iOS as more secure, and that application development =
for
&gt; iOS is more restrictive. Is this true?)

</pre></div>
      <div class=3D"responsebox"><pre class=3D"responsepre">On Sun, Mar 19,=
 2017 at 9:14 PM, Anonymous wrote:
&gt; 1. *** Wouldn't using permission label as string cause vulnerability? =
*** For example, attacker may create an app with a lot of permission label =
they guessed that the FriendTracker app may use such as perm.FRIEND_NEAR. (=
Really want to know the answer :) )

The strings are public, and it's best to think of them as being like
unix UIDs.  Even if you know the UID, it doesn't really help in terms
of getting permissions.  In Android's case, the installer asks the
user whether they want to give the permissions listed in an app's
manifest to the app, and if the user says no, the app doesn't get
installed and doesn't get those permissions.

&gt; 2. When developer split apps into two, FriendTracker and FriendViewer,=
 does this mean that there are literally two apps (accessed by two differen=
t icons in Android)? or they only want to use the word app as "module" but =
not the separate applications.

Literally two apps, each with its own icon.

Nickolai.

</pre></div>
      <div class=3D"responsebox"><pre class=3D"responsepre">One nice proper=
ty of the MAC model is that a developer can look at the
manifest and figure out what their security policy is.  So, diverging
from MAC means it's not so clear what the security plan is: you have
to look at the manifest, but also at the code.  Of course, sticking to
the MAC model wasn't sensible because it would mean Android wouldn't
be able to evolve to support new things; perhaps if they thought of
these issues upfront, they might have been able to design a MAC model
that would have incorporated these issues into the manifest.

Nickolai.

On Sun, Mar 19, 2017 at 2:33 PM, Anonymous wrote:
&gt; The authors of the paper seem to be concerned with Android security sc=
heme diverging from MAC model. Why might diverging from MAC model be bad, g=
iven that MAC doesn't meet the system needs under some scenarios?

</pre></div>
      <div class=3D"responsebox"><pre class=3D"responsepre">Portability acr=
oss CPU architectures was really important at the time
Android was developed (it wasn't clear if ARM or x86 or MIPS or
something else was going to win).  And Java provided that.

Nickolai.

On Sun, Mar 19, 2017 at 5:13 PM, Anonymous wrote:
&gt; Is there any particular reason why Java was selected for Android devel=
opment? Why not some other language?

</pre></div>
      <div class=3D"responsebox"><pre class=3D"responsepre">By convention, =
actions are prefixed by inverted domain names.  So an
individual app can define its own actions like com.friendtracker.FIND,
and that's unlikely to collide.  Android's base framework also
provides a bunch of standard actions like MAIN, DIAL, etc, that work
for a number of common cases.

Nickolai.

On Sun, Mar 19, 2017 at 8:11 PM, Anonymous wrote:
&gt; Are the actions unique for each application? If so, how are they kept =
unique? If not, how do two applications not "collide" in receiving action e=
vents?

</pre></div>
      <div class=3D"responsebox"><pre class=3D"responsepre">For content pro=
vider components, there are two permissions: a read
permission and a write permission.

Check out the first paragraph of the section called "Content Provider
Permissions" in the bottom left of page 55.

Nickolai.

On Mon, Mar 20, 2017 at 4:02 PM, Anonymous wrote:
&gt; Why does the quiz 1 practice exam mention two separate permissions
&gt; `read_friends' and `write_friends'. Is it not true that the permission=
s label
&gt; system in Android does not distinguish between different types of acce=
ss to a
&gt; component?
&gt;
&gt; From the reading:
&gt;
&gt; ```
&gt; In its simplest form, access to each component is restricted by assign=
ing it an
&gt; access permission label; this text string need not be unique. Develope=
rs assign
&gt; applications collections of permission labels.  When a component initi=
ates ICC,
&gt; the reference monitor looks at the permission labels assigned to its c=
ontaining
&gt; application and=E2=80=94 if the target component=E2=80=99s access perm=
ission label is in that
&gt; collection=E2=80=94allows ICC establishment to proceed.
&gt; ```

</pre></div>
      <div class=3D"responsebox"><pre class=3D"responsepre">No, I don't thi=
nk they have anything to do with security.

Nickolai.

On Sun, Mar 19, 2017 at 9:08 PM, Anonymous wrote:
&gt; The Android VM is different from a regular JavaVM. Do any of those dif=
ferences contribute to better security?

</pre></div>
      <div class=3D"responsebox"><pre class=3D"responsepre">Yeah, in hindsi=
ght this seems not so great.  I expect the original
justification was that, the phones at the time were pretty limited in
terms of CPU, and having each RPC call go through the reference
monitor wouldn't give acceptable performance.  So they had a
general-purpose "bind" first, which did a security check, and then
lots of RPCs that go directly to the service without checking the
reference monitor.

Nickolai.

On Sun, Mar 19, 2017 at 7:52 PM, Anonymous wrote:
&gt; 6.858 Paper Question for Lecture #11
&gt; Understanding Android Security
&gt; 03/19/17
&gt; Ismael 'Izzy' Gomez
&gt; -----
&gt;
&gt; What was the justification for the design choice to only allow develop=
ers to assign one permission label to a service, as described in the 'Servi=
ce Hooks' section? It seems like a bad design decision if you then have to =
have user-written code to do security at runtime, instead of (presumably) m=
ore sensible restrictions/permissions being facilitated by the Android syst=
em.

</pre></div>
      <div class=3D"responsebox"><pre class=3D"responsepre">OSX has almost =
none of the security sophistication that Android
provides.  Android runs apps in isolation from one another (with some
limited sharing, controlled by labels and permissions).  MacOSX apps
run all with the same privileges, and all have access to all of the
user's data.

Nickolai.

On Sun, Mar 19, 2017 at 9:07 PM, Anonymous wrote:
&gt; Whats different about the Andriod security platform with Apple's OSx

</pre></div>
      <div class=3D"responsebox"><pre class=3D"responsepre">iOS (separate f=
rom OSX) has a plan pretty similar to Android.

But, on the desktop, MacOSX has no isolation between apps.

Nickolai.

On Mon, Mar 20, 2017 at 2:47 PM, Anonymous wrote:
&gt; Does OSX have another security feature to block attackers from taking =
the
&gt; user's data, because I'm sure that Apple will take those into account
&gt; especially if they don't want their users to have their informations t=
aken
&gt; out from different apps, especially information from apple pay and wha=
t not?
&gt;
&gt; Anonymous
&gt;
&gt; On Sun, Mar 19, 2017 at 9:13 PM Nickolai Zeldovich &lt;nickolai@csail.=
mit.edu&gt;
&gt; wrote:
&gt;&gt;
&gt;&gt; OSX has almost none of the security sophistication that Android
&gt;&gt; provides.  Android runs apps in isolation from one another (with s=
ome
&gt;&gt; limited sharing, controlled by labels and permissions).  MacOSX ap=
ps
&gt;&gt; run all with the same privileges, and all have access to all of th=
e
&gt;&gt; user's data.
&gt;&gt;
&gt;&gt; Nickolai.
&gt;&gt;
&gt;&gt; On Sun, Mar 19, 2017 at 9:07 PM, Anonymous wrote:
&gt;&gt; &gt; Whats different about the Andriod security platform with Appl=
e's OSx
&gt;

</pre></div>
      <div class=3D"responsebox"><pre class=3D"responsepre">The user gets a=
sked, at app install time, if they would like to grant
these permissions to the app being installed.

Nickolai.

On Sun, Mar 19, 2017 at 1:01 PM, Anonymous wrote:
&gt; What prevents an application from 'forging' permission labels?  It see=
ms like a malicious application wanting to access another one can just decl=
are its components to have the appropriate permission labels and then commu=
nicate as it pleases.

</pre></div>
      <div class=3D"responsebox"><pre class=3D"responsepre">Commercial succ=
ess is likely determined by the fact that Google was
pushing it heavily early on, and made it pretty easy for device
manufacturers to start using Android on their phones.  I doubt the
details of this security architecture had much to do with Android's
commercial success (though perhaps if it lacked a security
architecture altogether, it may not have been as appealing).

Nickolai.

On Sun, Mar 19, 2017 at 8:59 PM, Anonymous wrote:
&gt; What are the biggest factors contributing to Android's commercial succ=
ess, in particular its growth of market share? What are its most attractive=
 features to developers?

</pre></div>
      <div class=3D"responsebox"><pre class=3D"responsepre">At install time=
, the Android installer asks the user if they want to
give that permission to the app being installed.

Nickolai.

On Sun, Mar 19, 2017 at 9:12 PM, Anonymous wrote:
&gt; Student Question
&gt; =3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D
&gt;
&gt; In the example about Broacast Intent permissions, the sender restricts=
 reception of the `FRIEND_NEAR` broadcast to Apps holding the `perm.FRIEND_=
NEAR` permisison label. However, what ensures that any App couldn't simply =
list that permission in its manifest and receive the Intents?

</pre></div>
      <div class=3D"responsebox"><pre class=3D"responsepre">Hard to say whe=
ther it's good or not.  Clearly there's something
pushing app developers to use these unusual IPC methods.  Perhaps it
has to do with performance; I don't know offhand.  Or maybe it's a
question of running some existing C-based library that doesn't know
about Android and just uses sockets on its own?  If the alternative is
not being able to run some app altogether, or having poor battery life
with it, then having the flexibility seems good..

Nickolai.

On Sun, Mar 19, 2017 at 9:01 PM, Anonymous wrote:
&gt; From the Android docs (https://developer.android.com/training/articles=
/security-tips.html), it seems like many different IPC methods still exist.=
 They briefly mention that some apps don=E2=80=99t bother with the framewor=
k altogether, using hacky methods like sockets and shared files instead. Is=
 allowing so many different options a good idea? There seem to be a lot of =
different ways to misuse the IPC frameworks, and especially in an open spac=
e like Android, these dangers seem especially important.

</pre></div>
      <div class=3D"responsebox"><pre class=3D"responsepre">Hindsight is 20=
/20. :-)  Better default permissions would have
definitely been a good idea.

Nickolai.

On Sun, Mar 19, 2017 at 8:39 PM, Anonymous wrote:
&gt; It feels as though by default components should be private and require=
 developers to explicitly define the access permissions. I'm unsure why the
&gt; decisions to infer access permission and to have implicitly open compo=
nents were made.

</pre></div>
      <div class=3D"responsebox"><pre class=3D"responsepre">Java isn't actu=
ally part of Android's security story at all, so
whether the code runs in a C shared library or in Java, the security
model applies the same way.

Nickolai.

On Sun, Mar 19, 2017 at 3:26 PM, Anonymous wrote:
&gt; 6.858 Lecture Question 11
&gt; Marcus Boorstin
&gt;
&gt; It's possible to write native shared libraries for Android that Java a=
pplications can call into.  How does this fit in to the security model disc=
ussed in the paper?

</pre></div>
      <div class=3D"responsebox"><pre class=3D"responsepre">On Sun, Mar 19,=
 2017 at 4:25 PM, Anonymous wrote:
&gt; 1) Do any of the security promises on Android actually address potenti=
al manipulations via the baseband processor in a phone?

Android has no plan for that.  There's ways of dealing with it, but it
has nothing to do with Android's application-facing security.

&gt; 2) What exactly is at the root of the problem of mobile security requi=
ring more than typical computer security? Is it mainly due to constraints o=
n resource limitations to put all processing into a small device?

No, it's more that installing arbitrary apps was a disaster in
Windows/MacOS, so Android developers decided they had a good chance to
make security better.  And it largely worked out -- Android security
(and iOS security) is far better than Windows/MacOS desktop security.

&gt; 3) Why do activity and broadcast receiver components need to be differ=
ent types? Is the format of input data necessarily substantially different?=
 Are there malicious inputs possibly brought by one of users and other appl=
ications and not the other?

Activities are how applications build UI components.  A service
doesn't get to draw on the screen or get user input.  So activities
are pretty different from services.

Broadcast receivers and services may look a bit more similar, but you
generally wouldn't start/stop/bind to a broadcast receiver like you
would for a service.  Broadcast receivers and activities are
definitely different; you don't switch to a new UI element when
receiving a broadcast message on a broadcast receiver.

Nickolai.

</pre></div>
      <div class=3D"responsebox"><pre class=3D"responsepre">Having secure d=
efaults turns out to be hugely important in practice.
Android originally defaulted components to be public unless the
developer said something in the manifest.  This led to a number of
security issues where developers just forgot to assign permissions.
In hindsight, having the default be private, and requiring a
permission on every component, would have been a good idea.

Nickolai.

On Sun, Mar 19, 2017 at 4:10 PM, Anonymous wrote:
&gt; The authors state that public components should always be assigned acc=
ess permissions. Why doesn't Android just mandate that all public component=
s have access permissions? Are there situations where a public component sh=
ouldn't?

</pre></div>
      <div class=3D"responsebox"><pre class=3D"responsepre">If the phone (i=
ts OS kernel) is compromised, then this paper is irrelevant, yes.

Nickolai.

On Sun, Mar 19, 2017 at 5:04 PM, Anonymous wrote:
&gt; Lecture 11 Reading - Student Question:
&gt;
&gt; The paper mentions that all labels are set at install time.
&gt; If a phone was compromised (and the attacker bypasses the user separat=
ion mechanism), then are there any mechanisms current in play that would pr=
event an attacker from changing these permissions during installation? (sim=
ilar to the previous papers we saw which included attestation etc...)

</pre></div>
      <div class=3D"responsebox"><pre class=3D"responsepre">No, labels are =
a way for applications to refer to a permission.  They
are more like a UID -- it's not a shared secret, it just identifies
principals.  Knowing the UID doesn't convey any privileges in itself.
When an app is installed, the Android framework examines the app's
manifest, and asks the user if they want to grant these privileges to
the newly-installed application.

Nickolai.

On Sun, Mar 19, 2017 at 5:02 PM, Anonymous wrote:
&gt; Rotem Hemo
&gt; mar 19
&gt; LEC 11: Question
&gt;
&gt; If I understand the paper correctly, labels are essentially just a (ve=
ry weak) shared secret. It doesn't seem that the any component or other mec=
hanism verifies them. What prevents a malicious application to forge them? =
(mainly considering the fact the android apps are written in Java can be ea=
sily reversed)

</pre></div>
      <div class=3D"responsebox"><pre class=3D"responsepre">It's the most d=
istinctive part of Android's security, and defines
their plan for dealing with multiple apps.  Otherwise, the rest of it
is pretty much the same as what you've seen before: it's important to
write code that doesn't have buffer overflows, it's important to
authenticate users correctly, etc.

Nickolai.

On Fri, Mar 17, 2017 at 10:30 AM, Anonymous wrote:
&gt; This paper is called "Understanding Android Security", and if I unders=
tand correctly, it seems to focus on how the middleware protects applicatio=
ns from each other. Is that correct? If so, why is that the focus? For exam=
ple, if I wanted to understand "computer security", I would have to underst=
and lots of things (e.g. the stuff we've covered in this class - buffer ove=
rflows, authentication, privilege separation, and so on). Is protecting app=
lications from each other the most important aspect of Android security in =
some sense?

</pre></div>
      <div class=3D"responsebox"><pre class=3D"responsepre">Pending intents=
 for some component C are more specific than giving an
application the permission to send any intent to C, and don't require
that application having to ask for a specific permission upfront.

Nickolai.

On Sun, Mar 19, 2017 at 9:00 PM, Anonymous wrote:
&gt; As I understand it, a Pending Intent basically creates an intent that =
can later be modified by the application that executes the intent. What sor=
t of attacks do Pending Intents help defend against that regular Intents we=
re vulnerable to?

</pre></div>
      <div class=3D"responsebox"><pre class=3D"responsepre">The URI permiss=
ion is a capability, kind-of like in Capsicum: unless
an app received a URI permission from another app that had the
necessary privileges, it can't just "make up" a URI permission.  The
reference monitor tracks all URI permissions that have been granted.

Nickolai.

On Sun, Mar 19, 2017 at 12:23 PM, Anonymous wrote:
&gt; Dillon Dumesnil
&gt; March 20, 2017
&gt;
&gt; 6.858 Lecture 11 Paper Question:
&gt;
&gt; With the URI permissions, couldn't a malicious user with knowledge of =
system gain access to any of the content stored int the content provider by=
 including read permission in the URI? How does Android prevent an attacker=
 from this kind of attack?

</pre></div>
      <div class=3D"responsebox"><pre class=3D"responsepre">Yes, if you run=
 "ps" on an Android phone, you will see a system_server
process, which is their reference monitor.

Nickolai.

On Sun, Mar 19, 2017 at 12:00 AM, Anonymous wrote:
&gt; Max Lancaster
&gt; Lecture 11 Question
&gt;
&gt; Is the reference monitor simply just another process running on the Li=
nux kernel?

</pre></div>
      <div class=3D"responsebox"><pre class=3D"responsepre">I believe that'=
s in part to avoid using Sun (now Oracle)'s patented
JVM that uses the standard Java bytecode.

Nickolai.

On Sun, Mar 19, 2017 at 8:12 PM, Anonymous wrote:
&gt; # sq11
&gt; Why does Android not use Java on the byte-code level?

</pre></div>
      <div class=3D"responsebox"><pre class=3D"responsepre">The "fixed-up" =
parts are the pending intents and URI delegation.  The
intents, components, permission labels, etc, were part of their base
design in one go.

Nickolai.

On Sat, Mar 18, 2017 at 12:26 AM, Anonymous wrote:
&gt; It seems like the different security mechanisms in Android were sort o=
f tacked on, one after the other, to address the security gap that exists i=
n the previous mechanisms. I get the feeling like it is a more patched solu=
tion, but was that they way that it was design? Did they sort of start with=
 the permissions labeling model, and then eventually refined it with intent=
s and public/private components? Or was the whole security designed in one =
go?

</pre></div>
      <div class=3D"responsebox"><pre class=3D"responsepre">The usual answe=
r is that the user needs to trust the launcher, and
needs to know what application the launcher might be starting, and
must assume no other app decides to start in the meantime with a
screen that looks just like the legitimate app's password prompt..
There isn't a story quite as clear as, say, Cloud Terminal.

Nickolai.

On Sun, Mar 19, 2017 at 5:38 PM, Anonymous wrote:
&gt; How do private components attest themselves to the OS/user? How can th=
e user be sure that the private component isn=E2=80=99t actually malware (e=
.g. when they enter a password)?

</pre></div>
      <div class=3D"responsebox"><pre class=3D"responsepre">It's not clear =
what a better solution would be, though..  What did you
have in mind?

Nickolai.

On Mon, Mar 20, 2017 at 11:32 AM, Anonymous wrote:
&gt; Hmm, I guess that's not ideal, but maybe allows for less app overhead/=
better
&gt; performance? Thanks for the response!
&gt;
&gt; Anonymous
&gt;
&gt; On Sun, Mar 19, 2017 at 7:54 PM, Nickolai Zeldovich &lt;nickolai@csail=
.mit.edu&gt;
&gt; wrote:
&gt;&gt;
&gt;&gt; The usual answer is that the user needs to trust the launcher, and
&gt;&gt; needs to know what application the launcher might be starting, and
&gt;&gt; must assume no other app decides to start in the meantime with a
&gt;&gt; screen that looks just like the legitimate app's password prompt..
&gt;&gt; There isn't a story quite as clear as, say, Cloud Terminal.
&gt;&gt;
&gt;&gt; Nickolai.
&gt;&gt;
&gt;&gt; On Sun, Mar 19, 2017 at 5:38 PM, Anonymous wrote:
&gt;&gt; &gt; How do private components attest themselves to the OS/user? H=
ow can the
&gt;&gt; &gt; user be sure that the private component isn=E2=80=99t actuall=
y malware (e.g. when
&gt;&gt; &gt; they enter a password)?
&gt;
&gt;

</pre></div>
      <div class=3D"responsebox"><pre class=3D"responsepre">The problem is =
that intents aren't directly created by users: the user
taps on the screen in their launcher, and the launcher determines what
that means.  So the launcher is the component whose job is to
translate user screen taps into intents.  But sometimes you have
asynchronous events like a phone call coming in.  It's important for
the phone dialer to show you a call, but that means it has to start
its activity without the user pressing an "is someone calling me?"
button..

Nickolai.

On Mon, Mar 20, 2017 at 11:50 AM, Anonymous wrote:
&gt; I was wondering if there was some way the Android OS might differentia=
te
&gt; between a user-created Intent (e.g. tapping on an app to open it) vs. =
an
&gt; Intent created by some background process (e.g. a virus). In this case=
,
&gt; maybe the OS could somehow prioritize the app opened via the user-crea=
ted
&gt; Intent if it has a private component. Not sure how feasible this is co=
mpared
&gt; to a Cloud Terminal-like solution or even how well the OS could
&gt; differentiate user-created Intents vs. others. I suppose a user-starte=
d
&gt; infected app that creates an Intent to open another password-protected=
 app
&gt; is a gray area.
&gt;
&gt; Thanks,
&gt; Anonymous
&gt;
&gt; On Mon, Mar 20, 2017 at 11:38 AM, Nickolai Zeldovich
&gt; &lt;nickolai@csail.mit.edu&gt; wrote:
&gt;&gt;
&gt;&gt; It's not clear what a better solution would be, though..  What did=
 you
&gt;&gt; have in mind?
&gt;&gt;
&gt;&gt; Nickolai.
&gt;&gt;
&gt;&gt; On Mon, Mar 20, 2017 at 11:32 AM, Anonymous wrote:
&gt;&gt; &gt; Hmm, I guess that's not ideal, but maybe allows for less app
&gt;&gt; &gt; overhead/better
&gt;&gt; &gt; performance? Thanks for the response!
&gt;&gt; &gt;
&gt;&gt; &gt; Anonymous
&gt;&gt; &gt;
&gt;&gt; &gt; On Sun, Mar 19, 2017 at 7:54 PM, Nickolai Zeldovich
&gt;&gt; &gt; &lt;nickolai@csail.mit.edu&gt;
&gt;&gt; &gt; wrote:
&gt;&gt; &gt;&gt;
&gt;&gt; &gt;&gt; The usual answer is that the user needs to trust the laun=
cher, and
&gt;&gt; &gt;&gt; needs to know what application the launcher might be star=
ting, and
&gt;&gt; &gt;&gt; must assume no other app decides to start in the meantime=
 with a
&gt;&gt; &gt;&gt; screen that looks just like the legitimate app's password=
 prompt..
&gt;&gt; &gt;&gt; There isn't a story quite as clear as, say, Cloud Termina=
l.
&gt;&gt; &gt;&gt;
&gt;&gt; &gt;&gt; Nickolai.
&gt;&gt; &gt;&gt;
&gt;&gt; &gt;&gt; On Sun, Mar 19, 2017 at 5:38 PM, Anonymous wrote:
&gt;&gt; &gt;&gt; &gt; How do private components attest themselves to the O=
S/user? How can
&gt;&gt; &gt;&gt; &gt; the
&gt;&gt; &gt;&gt; &gt; user be sure that the private component isn=E2=80=99=
t actually malware (e.g.
&gt;&gt; &gt;&gt; &gt; when
&gt;&gt; &gt;&gt; &gt; they enter a password)?
&gt;&gt; &gt;
&gt;&gt; &gt;
&gt;
&gt;

</pre></div>
      <div class=3D"responsebox"><pre class=3D"responsepre">The labels are =
publicly known -- it's best to think of them kind-of
like a unix user ID.  An app can't just ask for a UID just by knowing
it.  At install time, the app specifies which permissions it wants,
and the installer asks the user to confirm if those permissions should
actually be given to the app.

Same with URI delegation: the URI is not secret; the reference monitor
keeps track of all delegated URIs, kind-of like capabilities in
Capsicum, so an app can't just claim that it was delegated some URI.

Nickolai.

On Sat, Mar 18, 2017 at 6:05 AM, Anonymous wrote:
&gt; Lecture 11 Question - mmgong
&gt;
&gt; Since the permission labels are just strings with no sort of cryptogra=
phic signing, could a malicious application potentially gain permissions if=
 it somehow found out what the labels were? It seems easy to spoof these la=
bels.
&gt; Also, with the delegation of URI, if an attacker were able to intercep=
t the pending intent that contained the URI, could an authorized source the=
n just extract the URI and gain access itself?

</pre></div>
      <div class=3D"responsebox"><pre class=3D"responsepre">Surprisingly fe=
w changes to Android's actual security model since this
paper came out.  Perhaps the biggest change was in Android 6, which
started prompting the user to confirm that the permission should be
given the app, at the time the app actually tries to use it.

Nickolai.

On Sat, Mar 18, 2017 at 12:30 PM, Anonymous wrote:
&gt; I realize that this article was written around the launch of Android, =
so it makes sense that most of the security model was straight-forward (giv=
en that Android was just starting out). However, it was also apparent by th=
e end of the article that the ways of enforcing security were beginning to =
diverge from the original MAC-based model. Nearly ten years later, have sec=
urity enforcement mechanisms diverged even more, or have they returned to s=
omething that is more "MAC-like"? Also, have any of the "big questions" ask=
ed by the paper authors towards the end of the paper (before they introduce=
 their system) been answered?

</pre></div>
  </div>
</div>








<!-- End Page Content -->

</td></tr>

<tr bgcolor=3D"#999999" height=3D"20px">
<td style=3D"padding-left:10px; padding-top: 10px; padding-bottom: 10px">
<font style=3D"font-size: 12px;">
<p>Questions or comments regarding 6.858?  Send e-mail to the course staff =
at
<a href=3D"mailto:6858-staff@lists.csail.mit.edu"><i>6858-staff@lists.csail=
.mit.edu</i></a>.

</p></font><p><font style=3D"font-size: 12px;"><b><a href=3D"http://css.csa=
il.mit.edu/6.858/2018/questions.html?q=3Dq-android&amp;lec=3D11#top">Top</a=
></b> //
<b><a href=3D"http://css.csail.mit.edu/6.858/2018/">6.858 home</a></b> //=
=20
<i>Last updated Wednesday, 28-Feb-2018 11:14:53 EST</i>
</font>
</p></td></tr>
</tbody></table>

</td>

</tr>
</tbody>
</table>




</body></html>
------MultipartBoundary--L1NLsm4nOaw37JHcRC3dKBSOeGyHGOuXDc8b2zCQUv----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: http://css.csail.mit.edu/6.858/2018/style.css

@charset "utf-8";

body { background-color: rgb(255, 255, 255); margin: 0px; padding: 0px; fon=
t-family: verdana, arial, helvetica, sans-serif; }

p { font-size: 13px; }

ol { font-size: 13px; }

ul { font-size: 13px; }

pre { font-family: "courier new", courier, mono; color: rgb(202, 10, 10); f=
ont-size: 13px; }

.menuHead { text-align: center; padding-top: 8px; padding-bottom: 8px; }

.menuItem { color: rgb(255, 255, 255); text-decoration: none; font-weight: =
bold; font-size: 16px; }

table.calendar { font-family: arial, helvetica; font-size: 10pt; empty-cell=
s: show; border: 1px solid rgb(0, 0, 0); }

table.calendar tr td { border: 1px solid rgb(170, 170, 170); }

table.calendar tr { vertical-align: top; height: 75px; background: rgb(238,=
 238, 238); }

table.calendar tr.header { font-weight: bold; font-size: 13px; background-c=
olor: rgb(68, 68, 68); color: rgb(255, 255, 255); height: 25px; text-align:=
 center; }

.lecture { background: rgb(255, 255, 170); }

.holiday { background: rgb(204, 255, 204); }

.special { background: rgb(170, 170, 255); }

.lab { background: rgb(0, 204, 204); }

.important { background: rgb(255, 170, 170); }

.reading { color: rgb(51, 51, 255); }

.handout { color: rgb(0, 153, 0); }

.deadline { color: rgb(255, 0, 0); }

.note { color: rgb(136, 136, 0); }

.assignment { color: rgb(10, 160, 10); }

.date { color: rgb(68, 68, 68); }

div.questionbox { margin: 1pc 4% 0pc; padding: 0.5pc; background-color: rgb=
(224, 224, 255); border: 1px dashed red; }
------MultipartBoundary--L1NLsm4nOaw37JHcRC3dKBSOeGyHGOuXDc8b2zCQUv----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: http://css.csail.mit.edu/6.858/2018/cc-by.png

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
SUVORK5CYII=
------MultipartBoundary--L1NLsm4nOaw37JHcRC3dKBSOeGyHGOuXDc8b2zCQUv------
